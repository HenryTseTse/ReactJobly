{"ast":null,"code":"var _jsxFileName = \"/Users/henrytse/GitHub/Springboard/react-jobly/jobly-frontend/src/routes/companies/CompanyList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../../common/SearchForm\";\nimport JoblyApi from \"../../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../../common/LoadingSpinner\";\n\n/** Show page with list of companies.\n *\n * On mount, loads companies from API.\n * Re-loads filtered companies on submit from search form.\n *\n * This is routed to at /companies\n *\n * Routes -> { CompanyCard, SearchForm }\n */\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState(null);\n  useEffect(function getCompanies() {\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads companies. */\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n  if (!companies) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList col-md-8 offset-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    searchFor: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), companies.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, companies.map(c => /*#__PURE__*/React.createElement(CompanyCard, {\n    key: c.handle,\n    handle: c.handle,\n    name: c.name,\n    description: c.description,\n    logoUrl: c.logoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Sorry, no results were found!\"));\n}\nexport default CompanyList;","map":{"version":3,"names":["React","useState","useEffect","SearchForm","JoblyApi","CompanyCard","LoadingSpinner","CompanyList","companies","setCompanies","getCompanies","search","name","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","searchFor","length","map","c","key","handle","description","logoUrl"],"sources":["/Users/henrytse/GitHub/Springboard/react-jobly/jobly-frontend/src/routes/companies/CompanyList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../../common/SearchForm\";\nimport JoblyApi from \"../../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../../common/LoadingSpinner\";\n\n/** Show page with list of companies.\n *\n * On mount, loads companies from API.\n * Re-loads filtered companies on submit from search form.\n *\n * This is routed to at /companies\n *\n * Routes -> { CompanyCard, SearchForm }\n */\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState(null);\n\n  useEffect(function getCompanies() {\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads companies. */\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n\n  if (!companies) return <LoadingSpinner />;\n\n  return (\n      <div className=\"CompanyList col-md-8 offset-md-2\">\n        <SearchForm searchFor={search} />\n        {companies.length\n            ? (\n                <div className=\"CompanyList-list\">\n                  {companies.map(c => (\n                      <CompanyCard\n                          key={c.handle}\n                          handle={c.handle}\n                          name={c.name}\n                          description={c.description}\n                          logoUrl={c.logoUrl}\n                      />\n                  ))}\n                </div>\n            ) : (\n                <p className=\"lead\">Sorry, no results were found!</p>\n            )}\n      </div>\n  );\n}\n\nexport default CompanyList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,6BAA6B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,SAASQ,YAAYA,CAAA,EAAG;IAChCC,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeA,MAAMA,CAACC,IAAI,EAAE;IAC1B,IAAIJ,SAAS,GAAG,MAAMJ,QAAQ,CAACM,YAAY,CAACE,IAAI,CAAC;IACjDH,YAAY,CAACD,SAAS,CAAC;EACzB;EAEA,IAAI,CAACA,SAAS,EAAE,oBAAOR,KAAA,CAAAa,aAAA,CAACP,cAAc;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;EAEzC,oBACInB,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAC,kCAAkC;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/CnB,KAAA,CAAAa,aAAA,CAACV,UAAU;IAACkB,SAAS,EAAEV,MAAO;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChCX,SAAS,CAACc,MAAM,gBAETtB,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BX,SAAS,CAACe,GAAG,CAACC,CAAC,iBACZxB,KAAA,CAAAa,aAAA,CAACR,WAAW;IACRoB,GAAG,EAAED,CAAC,CAACE,MAAO;IACdA,MAAM,EAAEF,CAAC,CAACE,MAAO;IACjBd,IAAI,EAAEY,CAAC,CAACZ,IAAK;IACbe,WAAW,EAAEH,CAAC,CAACG,WAAY;IAC3BC,OAAO,EAAEJ,CAAC,CAACI,OAAQ;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CACJ,CACE,CAAC,gBAENnB,KAAA,CAAAa,aAAA;IAAGO,SAAS,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,+BAAgC,CAEzD,CAAC;AAEZ;AAEA,eAAeZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}